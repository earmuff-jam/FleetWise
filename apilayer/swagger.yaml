basePath: /
consumes:
    - application/json
definitions:
    AssetSummary:
        properties:
            created_at:
                format: date-time
                type: string
                x-go-name: CreatedAt
            id:
                type: string
                x-go-name: ID
            items:
                items:
                    type: string
                type: array
                x-go-name: Items
            name:
                type: string
                x-go-name: Name
            price:
                format: double
                type: number
                x-go-name: Price
            returntime:
                format: date-time
                type: string
                x-go-name: ReturnTime
            sharable_groups:
                items:
                    type: string
                type: array
                x-go-name: SharableGroups
            type:
                type: string
                x-go-name: Type
            updated_at:
                format: date-time
                type: string
                x-go-name: UpdatedAt
        title: AssetSummary ...
        type: object
        x-go-package: github.com/mohit2530/communityCare/model
    Category:
        properties:
            color:
                type: string
                x-go-name: Color
            created_at:
                format: date-time
                type: string
                x-go-name: CreatedAt
            created_by:
                type: string
                x-go-name: CreatedBy
            creator:
                type: string
                x-go-name: Creator
            description:
                type: string
                x-go-name: Description
            id:
                type: string
                x-go-name: ID
            image:
                items:
                    format: uint8
                    type: integer
                type: array
                x-go-name: Image
            location:
                $ref: '#/definitions/Location'
            name:
                type: string
                x-go-name: Name
            sharable_groups:
                items:
                    type: string
                type: array
                x-go-name: SharableGroups
            status:
                type: string
                x-go-name: Status
            status_description:
                type: string
                x-go-name: StatusDescription
            status_name:
                type: string
                x-go-name: StatusName
            updated_at:
                format: date-time
                type: string
                x-go-name: UpdatedAt
            updated_by:
                type: string
                x-go-name: UpdatedBy
            updator:
                type: string
                x-go-name: Updator
        title: Category ...
        type: object
        x-go-package: github.com/mohit2530/communityCare/model
    CategoryItem:
        properties:
            category_id:
                type: string
                x-go-name: CategoryID
            created_at:
                format: date-time
                type: string
                x-go-name: CreatedAt
            created_by:
                type: string
                x-go-name: CreatedBy
            creator:
                type: string
                x-go-name: Creator
            id:
                type: string
                x-go-name: ID
            sharable_groups:
                items:
                    type: string
                type: array
                x-go-name: SharableGroups
            updated_at:
                format: date-time
                type: string
                x-go-name: UpdatedAt
            updated_by:
                type: string
                x-go-name: UpdatedBy
            updator:
                type: string
                x-go-name: Updator
        title: CategoryItem ...
        type: object
        x-go-package: github.com/mohit2530/communityCare/model
    CategoryItemRequest:
        properties:
            assetIDs:
                items:
                    type: string
                type: array
                x-go-name: AssetIDs
            collaborators:
                items:
                    type: string
                type: array
                x-go-name: Collaborators
            id:
                type: string
                x-go-name: ID
            userID:
                type: string
                x-go-name: UserID
        title: CategoryItemRequest ...
        type: object
        x-go-package: github.com/mohit2530/communityCare/model
    CategoryItemResponse:
        properties:
            category_id:
                type: string
                x-go-name: CategoryID
            created_at:
                format: date-time
                type: string
                x-go-name: CreatedAt
            created_by:
                type: string
                x-go-name: CreatedBy
            creator:
                type: string
                x-go-name: Creator
            description:
                type: string
                x-go-name: Description
            id:
                type: string
                x-go-name: ID
            item_id:
                type: string
                x-go-name: ItemID
            location:
                type: string
                x-go-name: Location
            name:
                type: string
                x-go-name: Name
            price:
                type: string
                x-go-name: Price
            quantity:
                type: string
                x-go-name: Quantity
            sharable_groups:
                items:
                    type: string
                type: array
                x-go-name: SharableGroups
            updated_at:
                format: date-time
                type: string
                x-go-name: UpdatedAt
            updated_by:
                type: string
                x-go-name: UpdatedBy
            updator:
                type: string
                x-go-name: Updator
        title: CategoryItemResponse ...
        type: object
        x-go-package: github.com/mohit2530/communityCare/model
    Event:
        properties:
            attendees:
                items:
                    type: string
                type: array
                x-go-name: Attendees
            boundingbox:
                items:
                    type: string
                type: array
                x-go-name: BoundingBox
            cause:
                type: string
                x-go-name: Cause
            city:
                type: string
                x-go-name: City
            class:
                type: string
                x-go-name: Class
            collaborators:
                items:
                    type: string
                type: array
                x-go-name: Collaborators
            comments:
                type: string
                x-go-name: Comments
            created_at:
                format: date-time
                type: string
                x-go-name: CreatedAt
            created_by:
                type: string
                x-go-name: CreatedBy
            creator_name:
                type: string
                x-go-name: CreatorName
            deactivated:
                type: boolean
                x-go-name: Deactivated
            deactivated_reason:
                type: string
                x-go-name: DeactivatedReason
            description:
                type: string
                x-go-name: Description
            display_name:
                type: string
                x-go-name: DisplayName
            id:
                type: string
                x-go-name: ID
            image_url:
                type: string
                x-go-name: ImageURL
            importance:
                type: string
                x-go-name: Importance
            lat:
                type: string
                x-go-name: Lattitude
            license:
                type: string
                x-go-name: License
            lon:
                type: string
                x-go-name: Longitude
            max_attendees:
                format: int64
                type: integer
                x-go-name: MaxAttendees
            osm_type:
                type: string
                x-go-name: OsmType
            place_id:
                type: string
                x-go-name: PlaceID
            powered_by:
                type: string
                x-go-name: PoweredBy
            price:
                format: double
                type: number
                x-go-name: Price
            project_type:
                type: string
                x-go-name: ProjectType
            registration_link:
                type: string
                x-go-name: RegistrationLink
            required_total_man_hours:
                format: int64
                type: integer
                x-go-name: TotalManHours
            sharable_groups:
                items:
                    type: string
                type: array
                x-go-name: SharableGroups
            skills_required:
                items:
                    type: string
                type: array
                x-go-name: ProjectSkills
            start_date:
                format: date-time
                type: string
                x-go-name: StartDate
            state:
                type: string
                x-go-name: State
            street:
                type: string
                x-go-name: Street
            text:
                type: string
                x-go-name: OsmID
            title:
                type: string
                x-go-name: Title
            type:
                type: string
                x-go-name: Type
            updated_at:
                format: date-time
                type: string
                x-go-name: UpdatedAt
            updated_by:
                type: string
                x-go-name: UpdatedBy
            updator_name:
                type: string
                x-go-name: UpdatorName
            zip:
                type: string
                x-go-name: ZipCode
        title: Event ...
        type: object
        x-go-package: github.com/mohit2530/communityCare/model
    EventCause:
        properties:
            cause:
                type: string
                x-go-name: Cause
            id:
                type: string
                x-go-name: ID
        title: EventCause ...
        type: object
        x-go-package: github.com/mohit2530/communityCare/model
    Expense:
        properties:
            category_id:
                type: string
                x-go-name: CategoryID
            category_name:
                type: string
                x-go-name: Category
            created_at:
                format: date-time
                type: string
                x-go-name: CreatedAt
            created_by:
                type: string
                x-go-name: CreatedBy
            creator_name:
                type: string
                x-go-name: CreatorName
            eventID:
                type: string
                x-go-name: EventID
            id:
                type: string
                x-go-name: ID
            item_cost:
                type: string
                x-go-name: ItemCost
            item_name:
                type: string
                x-go-name: ItemName
            notes:
                type: string
                x-go-name: Notes
            purchase_location:
                type: string
                x-go-name: PurchaseLocation
            sharable_groups:
                items:
                    type: string
                type: array
                x-go-name: SharableGroups
            updated_at:
                format: date-time
                type: string
                x-go-name: UpdatedAt
            updated_by:
                type: string
                x-go-name: UpdatedBy
            updator_name:
                type: string
                x-go-name: UpdatorName
        title: Expense ...
        type: object
        x-go-package: github.com/mohit2530/communityCare/model
    FavouriteItem:
        properties:
            category_id:
                type: string
                x-go-name: CategoryID
            category_name:
                type: string
                x-go-name: CategoryName
            category_status:
                type: string
                x-go-name: CategoryStatus
            created_at:
                format: date-time
                type: string
                x-go-name: CreatedAt
            created_by:
                type: string
                x-go-name: CreatedBy
            creator:
                type: string
                x-go-name: Creator
            id:
                type: string
                x-go-name: ID
            maintenance_plan_id:
                type: string
                x-go-name: MaintenancePlanID
            maintenance_plan_name:
                type: string
                x-go-name: MaintenancePlanName
            maintenance_plan_status:
                type: string
                x-go-name: MaintenancePlanStatus
            sharable_groups:
                items:
                    format: uuid
                    type: string
                type: array
                x-go-name: SharableGroups
            updated_at:
                format: date-time
                type: string
                x-go-name: UpdatedAt
            updated_by:
                type: string
                x-go-name: UpdatedBy
            updator:
                type: string
                x-go-name: Updator
        title: FavouriteItem ...
        type: object
        x-go-package: github.com/mohit2530/communityCare/model
    Inventory:
        properties:
            associated_image_url:
                type: string
                x-go-name: AssociatedImageURL
            barcode:
                type: string
                x-go-name: Barcode
            bought_at:
                type: string
                x-go-name: BoughtAt
            created_at:
                format: date-time
                type: string
                x-go-name: CreatedAt
            created_by:
                type: string
                x-go-name: CreatedBy
            creator_name:
                type: string
                x-go-name: CreatorName
            description:
                type: string
                x-go-name: Description
            id:
                type: string
                x-go-name: ID
            image:
                items:
                    format: uint8
                    type: integer
                type: array
                x-go-name: Image
            is_returnable:
                type: boolean
                x-go-name: IsReturnable
            location:
                type: string
                x-go-name: Location
            max_height:
                type: string
                x-go-name: MaxHeight
            max_weight:
                type: string
                x-go-name: MaxWeight
            min_height:
                type: string
                x-go-name: MinHeight
            min_weight:
                type: string
                x-go-name: MinWeight
            name:
                type: string
                x-go-name: Name
            price:
                format: double
                type: number
                x-go-name: Price
            quantity:
                format: int64
                type: integer
                x-go-name: Quantity
            return_datetime:
                format: date-time
                type: string
                x-go-name: ReturnDateTime
            return_location:
                type: string
                x-go-name: ReturnLocation
            return_notes:
                type: string
                x-go-name: ReturnNotes
            sharable_groups:
                items:
                    type: string
                type: array
                x-go-name: SharableGroups
            sku:
                type: string
                x-go-name: SKU
            status:
                type: string
                x-go-name: Status
            storage_location_id:
                type: string
                x-go-name: StorageLocationID
            updated_at:
                format: date-time
                type: string
                x-go-name: UpdatedAt
            updated_by:
                type: string
                x-go-name: UpdatedBy
            updator:
                type: string
                x-go-name: UpdaterName
        title: Inventory ...
        type: object
        x-go-package: github.com/mohit2530/communityCare/model
    InventoryItemToUpdate:
        properties:
            column:
                type: string
                x-go-name: Column
            id:
                type: string
                x-go-name: ID
            userID:
                type: string
                x-go-name: UserID
            value:
                type: string
                x-go-name: Value
        title: InventoryItemToUpdate ...
        type: object
        x-go-package: github.com/mohit2530/communityCare/model
    InventoryListRequest:
        properties:
            InventoryList:
                items:
                    $ref: '#/definitions/Inventory'
                type: array
            created_at:
                format: date-time
                type: string
                x-go-name: CreatedAt
            created_by:
                type: string
                x-go-name: CreatedBy
        title: InventoryListRequest ...
        type: object
        x-go-package: github.com/mohit2530/communityCare/model
    Item:
        properties:
            bought_at:
                type: string
                x-go-name: BoughtAt
            created_at:
                format: date-time
                type: string
                x-go-name: CreatedAt
            created_by:
                type: string
                x-go-name: CreatedBy
            creator_name:
                type: string
                x-go-name: CreatorName
            description:
                type: string
                x-go-name: Description
            eventID:
                type: string
                x-go-name: EventID
            id:
                type: string
                x-go-name: ID
            location:
                type: string
                x-go-name: Location
            name:
                type: string
                x-go-name: Name
            quantity:
                format: int64
                type: integer
                x-go-name: Quantity
            storage_location_id:
                type: string
                x-go-name: LocationID
            unit_price:
                format: double
                type: number
                x-go-name: UnitPrice
            updated_at:
                format: date-time
                type: string
                x-go-name: UpdatedAt
            updated_by:
                type: string
                x-go-name: UpdatedBy
            updater_name:
                type: string
                x-go-name: UpdaterName
        title: Item ...
        type: object
        x-go-package: github.com/mohit2530/communityCare/model
    ItemToUpdate:
        properties:
            column:
                type: string
                x-go-name: Column
            eventID:
                type: string
                x-go-name: EventID
            itemID:
                type: string
                x-go-name: ItemID
            userID:
                type: string
                x-go-name: UserID
            value:
                type: string
                x-go-name: Value
        title: ItemToUpdate ...
        type: object
        x-go-package: github.com/mohit2530/communityCare/model
    Location:
        properties:
            lat:
                format: double
                type: number
                x-go-name: Lat
            lon:
                format: double
                type: number
                x-go-name: Lon
        title: Location ...
        type: object
        x-go-package: github.com/mohit2530/communityCare/model
    MaintenanceItemRequest:
        properties:
            assetIDs:
                items:
                    type: string
                type: array
                x-go-name: AssetIDs
            collaborators:
                items:
                    type: string
                type: array
                x-go-name: Collaborators
            id:
                type: string
                x-go-name: ID
            userID:
                type: string
                x-go-name: UserID
        title: MaintenanceItemRequest ...
        type: object
        x-go-package: github.com/mohit2530/communityCare/model
    MaintenanceItemResponse:
        properties:
            created_at:
                format: date-time
                type: string
                x-go-name: CreatedAt
            created_by:
                type: string
                x-go-name: CreatedBy
            creator:
                type: string
                x-go-name: Creator
            description:
                type: string
                x-go-name: Description
            id:
                type: string
                x-go-name: ID
            item_id:
                type: string
                x-go-name: ItemID
            location:
                type: string
                x-go-name: Location
            name:
                type: string
                x-go-name: Name
            plan_id:
                type: string
                x-go-name: MaintenancePlanID
            price:
                type: string
                x-go-name: Price
            quantity:
                type: string
                x-go-name: Quantity
            sharable_groups:
                items:
                    type: string
                type: array
                x-go-name: SharableGroups
            updated_at:
                format: date-time
                type: string
                x-go-name: UpdatedAt
            updated_by:
                type: string
                x-go-name: UpdatedBy
            updator:
                type: string
                x-go-name: Updator
        title: MaintenanceItemResponse ...
        type: object
        x-go-package: github.com/mohit2530/communityCare/model
    MaintenancePlan:
        properties:
            color:
                type: string
                x-go-name: Color
            created_at:
                format: date-time
                type: string
                x-go-name: CreatedAt
            created_by:
                type: string
                x-go-name: CreatedBy
            creator:
                type: string
                x-go-name: Creator
            description:
                type: string
                x-go-name: Description
            id:
                type: string
                x-go-name: ID
            image:
                items:
                    format: uint8
                    type: integer
                type: array
                x-go-name: Image
            location:
                $ref: '#/definitions/Location'
            maintenance_status:
                type: string
                x-go-name: Status
            maintenance_status_description:
                type: string
                x-go-name: StatusDescription
            maintenance_status_name:
                type: string
                x-go-name: StatusName
            name:
                type: string
                x-go-name: Name
            plan_due:
                format: date-time
                type: string
                x-go-name: PlanDue
            plan_type:
                type: string
                x-go-name: PlanType
            sharable_groups:
                items:
                    type: string
                type: array
                x-go-name: SharableGroups
            updated_at:
                format: date-time
                type: string
                x-go-name: UpdatedAt
            updated_by:
                type: string
                x-go-name: UpdatedBy
            updator:
                type: string
                x-go-name: Updator
        title: MaintenancePlan ...
        type: object
        x-go-package: github.com/mohit2530/communityCare/model
    MessageResponse:
        properties:
            Message:
                type: string
        title: MessageResponse ...
        type: object
        x-go-package: github.com/mohit2530/communityCare
    Note:
        properties:
            color:
                type: string
                x-go-name: Color
            completionDate:
                format: date-time
                type: string
                x-go-name: CompletionDate
            created_at:
                format: date-time
                type: string
                x-go-name: CreatedAt
            created_by:
                type: string
                x-go-name: CreatedBy
            creator:
                type: string
                x-go-name: Creator
            description:
                type: string
                x-go-name: Description
            location:
                $ref: '#/definitions/Location'
            noteID:
                type: string
                x-go-name: ID
            sharable_groups:
                items:
                    format: uuid
                    type: string
                type: array
                x-go-name: SharableGroups
            status:
                type: string
                x-go-name: Status
            status_description:
                type: string
                x-go-name: StatusDescription
            status_name:
                type: string
                x-go-name: StatusName
            title:
                type: string
                x-go-name: Title
            updated_at:
                format: date-time
                type: string
                x-go-name: UpdatedAt
            updated_by:
                type: string
                x-go-name: UpdatedBy
            updator:
                type: string
                x-go-name: Updator
        title: Notes ...
        type: object
        x-go-package: github.com/mohit2530/communityCare/model
    Notification:
        properties:
            created_at:
                format: date-time
                type: string
                x-go-name: CreatedAt
            created_by:
                type: string
                x-go-name: CreatedBy
            creator_name:
                type: string
                x-go-name: CreatorName
            event_id:
                type: string
                x-go-name: EventID
            id:
                type: string
                x-go-name: ID
            is_resolved:
                type: boolean
                x-go-name: IsResolved
            is_viewed:
                type: boolean
                x-go-name: IsViewed
            title:
                type: string
                x-go-name: Title
            updated_at:
                format: date-time
                type: string
                x-go-name: UpdatedAt
            updated_by:
                type: string
                x-go-name: UpdatedBy
            updater_name:
                type: string
                x-go-name: UpdaterName
        title: Notification ...
        type: object
        x-go-package: github.com/mohit2530/communityCare/model
    Profile:
        properties:
            about_me:
                type: string
                x-go-name: AboutMe
            appearance:
                type: boolean
                x-go-name: Appearance
            avatar_url:
                type: string
                x-go-name: AvatarUrl
            created_at:
                format: date-time
                type: string
                x-go-name: CreatedAt
            created_by:
                type: string
                x-go-name: CreatedBy
            creator:
                type: string
                x-go-name: Creator
            email_address:
                type: string
                x-go-name: EmailAddress
            full_name:
                type: string
                x-go-name: FullName
            grid_view:
                type: boolean
                x-go-name: GridView
            id:
                format: uuid
                type: string
                x-go-name: ID
            online_status:
                type: boolean
                x-go-name: OnlineStatus
            phone_number:
                type: string
                x-go-name: PhoneNumber
            updated_at:
                format: date-time
                type: string
                x-go-name: UpdatedAt
            updated_by:
                type: string
                x-go-name: UpdatedBy
            updator:
                type: string
                x-go-name: Updator
            username:
                type: string
                x-go-name: Username
        title: Profile ...
        type: object
        x-go-package: github.com/mohit2530/communityCare/model
    ProfileStats:
        properties:
            totalAssets:
                format: int64
                type: integer
                x-go-name: TotalAssets
            totalCategories:
                format: int64
                type: integer
                x-go-name: TotalCategories
            totalMaintenancePlans:
                format: int64
                type: integer
                x-go-name: TotalMaintenancePlans
        title: ProfileStats ...
        type: object
        x-go-package: github.com/mohit2530/communityCare/model
    ProjectType:
        properties:
            id:
                type: string
                x-go-name: ID
            type:
                type: string
                x-go-name: Type
        title: ProjectType ...
        type: object
        x-go-package: github.com/mohit2530/communityCare/model
    RawInventory:
        properties:
            barcode:
                type: string
                x-go-name: Barcode
            bought_at:
                type: string
                x-go-name: BoughtAt
            description:
                type: string
                x-go-name: Description
            location:
                type: string
                x-go-name: Location
            name:
                type: string
                x-go-name: Name
            price:
                format: double
                type: number
                x-go-name: Price
            quantity:
                format: int64
                type: integer
                x-go-name: Quantity
            sku:
                type: string
                x-go-name: SKU
        title: RawInventory ...
        type: object
        x-go-package: github.com/mohit2530/communityCare/model
    RecentActivity:
        properties:
            activity_id:
                type: string
                x-go-name: ActivityID
            created_at:
                format: date-time
                type: string
                x-go-name: CreatedAt
            created_by:
                type: string
                x-go-name: CreatedBy
            creator:
                type: string
                x-go-name: Creator
            custom_action:
                type: string
                x-go-name: CustomAction
            id:
                format: uuid
                type: string
                x-go-name: ID
            sharable_groups:
                items:
                    type: string
                type: array
                x-go-name: SharableGroups
            title:
                type: string
                x-go-name: Title
            type:
                type: string
                x-go-name: Type
            updated_at:
                format: date-time
                type: string
                x-go-name: UpdatedAt
            updated_by:
                type: string
                x-go-name: UpdatedBy
            updator:
                type: string
                x-go-name: Updator
        title: RecentActivity ...
        type: object
        x-go-package: github.com/mohit2530/communityCare/model
    Report:
        properties:
            cost_category_items:
                format: double
                type: number
                x-go-name: TotalCategoryItemsCost
            created_at:
                format: date-time
                type: string
                x-go-name: CreatedAt
            created_by:
                type: string
                x-go-name: CreatedBy
            creator_name:
                type: string
                x-go-name: CreatorName
            id:
                type: string
                x-go-name: ID
            selected_time_range:
                format: date-time
                type: string
                x-go-name: SelectedTimeRange
            sharable_groups:
                items:
                    type: string
                type: array
                x-go-name: SharableGroups
            total_valuation:
                format: double
                type: number
                x-go-name: ItemValuation
            updated_at:
                format: date-time
                type: string
                x-go-name: UpdatedAt
            updated_by:
                type: string
                x-go-name: UpdatedBy
            updater_name:
                type: string
                x-go-name: UpdaterName
        title: Report ...
        type: object
        x-go-package: github.com/mohit2530/communityCare/model
    ReportEvent:
        properties:
            created_at:
                format: date-time
                type: string
                x-go-name: CreatedAt
            created_by:
                type: string
                x-go-name: CreatedBy
            creator_name:
                type: string
                x-go-name: CreatorName
            description:
                type: string
                x-go-name: Description
            event_id:
                type: string
                x-go-name: EventID
            event_location:
                type: string
                x-go-name: EventLocation
            id:
                type: string
                x-go-name: ID
            organizer_name:
                type: string
                x-go-name: OrganizerName
            sharable_groups:
                items:
                    type: string
                type: array
                x-go-name: SharableGroups
            subject:
                type: string
                x-go-name: Subject
            updated_at:
                format: date-time
                type: string
                x-go-name: UpdatedAt
            updated_by:
                type: string
                x-go-name: UpdatedBy
            updator_name:
                type: string
                x-go-name: UpdatorName
        title: ReportEvent ...
        type: object
        x-go-package: github.com/mohit2530/communityCare/model
    StandardClaims:
        description: |-
            Structured version of Claims Section, as referenced at
            https://tools.ietf.org/html/rfc7519#section-4.1
            See examples for how to use this with your own claim types
        properties:
            aud:
                type: string
                x-go-name: Audience
            exp:
                format: int64
                type: integer
                x-go-name: ExpiresAt
            iat:
                format: int64
                type: integer
                x-go-name: IssuedAt
            iss:
                type: string
                x-go-name: Issuer
            jti:
                type: string
                x-go-name: Id
            nbf:
                format: int64
                type: integer
                x-go-name: NotBefore
            sub:
                type: string
                x-go-name: Subject
        type: object
        x-go-package: github.com/dgrijalva/jwt-go
    State:
        properties:
            abbreviation:
                type: string
                x-go-name: Abbreviation
            id:
                type: string
                x-go-name: ID
            name:
                type: string
                x-go-name: Name
        title: State ...
        type: object
        x-go-package: github.com/mohit2530/communityCare/model
    StatusList:
        properties:
            color:
                type: string
                x-go-name: Color
            created_at:
                format: date-time
                type: string
                x-go-name: CreatedAt
            created_by:
                type: string
                x-go-name: CreatedBy
            creator_name:
                type: string
                x-go-name: CreatorName
            description:
                type: string
                x-go-name: Description
            id:
                format: uuid
                type: string
                x-go-name: ID
            name:
                type: string
                x-go-name: Name
            sharable_groups:
                items:
                    type: string
                type: array
                x-go-name: SharableGroups
            updated_at:
                format: date-time
                type: string
                x-go-name: UpdatedAt
            updated_by:
                type: string
                x-go-name: UpdatedBy
            updater_name:
                type: string
                x-go-name: UpdaterName
        title: StatusList ...
        type: object
        x-go-package: github.com/mohit2530/communityCare/model
    StorageLocation:
        properties:
            created_at:
                format: date-time
                type: string
                x-go-name: CreatedAt
            created_by:
                type: string
                x-go-name: CreatedBy
            id:
                type: string
                x-go-name: ID
            location:
                type: string
                x-go-name: Location
            sharable_groups:
                items:
                    type: string
                type: array
                x-go-name: SharableGroups
            updated_at:
                format: date-time
                type: string
                x-go-name: UpdatedAt
            updated_by:
                type: string
                x-go-name: UpdatedBy
        title: StorageLocation ...
        type: object
        x-go-package: github.com/mohit2530/communityCare/model
    TransferInventory:
        description: TransferInventory
        properties:
            column:
                type: string
                x-go-name: Column
            eventID:
                type: string
                x-go-name: EventID
            itemIDs:
                items:
                    type: string
                type: array
                x-go-name: ItemIDs
            userID:
                type: string
                x-go-name: UserID
            value:
                type: string
                x-go-name: Value
        type: object
        x-go-package: github.com/mohit2530/communityCare/model
    UpdateAssetColumn:
        description: UpdateAssetColumn
        properties:
            assetID:
                type: string
                x-go-name: AssetID
            columnName:
                type: string
                x-go-name: ColumnName
            inputColumn:
                type: string
                x-go-name: InputColumn
        type: object
        x-go-package: github.com/mohit2530/communityCare/model
    User:
        properties:
            InstanceID:
                format: uuid
                type: string
            aud:
                type: string
                x-go-name: Aud
            banned_until:
                format: date-time
                type: string
                x-go-name: BannedUntil
            confirmation_sent_at:
                format: date-time
                type: string
                x-go-name: ConfirmationSentAt
            confirmation_token:
                type: string
                x-go-name: ConfirmationToken
            confirmed_at:
                format: date-time
                type: string
                x-go-name: ConfirmedAt
            created_at:
                format: date-time
                type: string
                x-go-name: CreatedAt
            deleted_at:
                format: date-time
                type: string
                x-go-name: DeletedAt
            email:
                type: string
                x-go-name: Email
            email_change:
                type: string
                x-go-name: EmailChange
            email_change_confirm_status:
                format: int64
                type: integer
                x-go-name: EmailChangeConfirmStatus
            email_change_sent_at:
                format: date-time
                type: string
                x-go-name: EmailChangeSentAt
            email_change_token_current:
                type: string
                x-go-name: EmailChangeTokenCurrent
            email_change_token_new:
                type: string
                x-go-name: EmailChangeTokenNew
            email_confirmed_at:
                format: date-time
                type: string
                x-go-name: EmailConfirmedAt
            encrypted_password:
                type: string
                x-go-name: EncryptedPassword
            first_name:
                type: string
                x-go-name: FirstName
            id:
                format: uuid
                type: string
                x-go-name: ID
            invited_at:
                format: date-time
                type: string
                x-go-name: InvitedAt
            is_sso_user:
                type: boolean
                x-go-name: IsSSOUser
            last_name:
                type: string
                x-go-name: LastName
            last_sign_in_at:
                format: date-time
                type: string
                x-go-name: LastSignInAt
            middle_name:
                type: string
                x-go-name: MiddleName
            phone:
                type: string
                x-go-name: Phone
            phone_change:
                type: string
                x-go-name: PhoneChange
            phone_change_sent_at:
                format: date-time
                type: string
                x-go-name: PhoneChangeSentAt
            phone_change_token:
                type: string
                x-go-name: PhoneChangeToken
            phone_confirmed_at:
                format: date-time
                type: string
                x-go-name: PhoneConfirmedAt
            raw_app_meta_data:
                type: object
                x-go-name: RawAppMetaData
            raw_user_meta_data:
                type: object
                x-go-name: RawUserMetaData
            re_authentication_sent_at:
                format: date-time
                type: string
                x-go-name: ReAuthenticationSentAt
            re_authentication_token:
                type: string
                x-go-name: ReAuthenticationToken
            recovery_sent_at:
                format: date-time
                type: string
                x-go-name: RecoverySentAt
            recovery_token:
                type: string
                x-go-name: RecoveryToken
            role:
                type: string
                x-go-name: Role
            updated_at:
                format: date-time
                type: string
                x-go-name: UpdatedAt
        title: User ...
        type: object
        x-go-package: github.com/mohit2530/communityCare/model
    UserCredentials:
        properties:
            aud:
                type: string
                x-go-name: Audience
            birthday:
                type: string
                x-go-name: Birthday
            email:
                type: string
                x-go-name: Email
            exp:
                format: int64
                type: integer
                x-go-name: ExpiresAt
            expiration_time:
                format: date-time
                type: string
                x-go-name: ExpirationTime
            iat:
                format: int64
                type: integer
                x-go-name: IssuedAt
            id:
                format: uuid
                type: string
                x-go-name: ID
            iss:
                type: string
                x-go-name: Issuer
            jti:
                type: string
                x-go-name: Id
            licence_key:
                type: string
                x-go-name: LicenceKey
            nbf:
                format: int64
                type: integer
                x-go-name: NotBefore
            password:
                type: string
                x-go-name: EncryptedPassword
            pre_token:
                type: string
                x-go-name: PreBuiltToken
            role:
                type: string
                x-go-name: Role
            sub:
                type: string
                x-go-name: Subject
            user_agent:
                type: string
                x-go-name: UserAgent
            username:
                type: string
                x-go-name: Username
        title: UserCredentials ...
        type: object
        x-go-package: github.com/mohit2530/communityCare/model
    UserEmail:
        properties:
            email:
                type: string
                x-go-name: EmailAddress
        title: UserEmail ...
        type: object
        x-go-package: github.com/mohit2530/communityCare/model
    VolunteeringDetails:
        properties:
            created_at:
                format: date-time
                type: string
                x-go-name: CreatedAt
            created_by:
                type: string
                x-go-name: CreatedBy
            eventID:
                type: string
                x-go-name: EventID
            id:
                type: string
                x-go-name: ID
            project_skills_id:
                type: string
                x-go-name: EventSkillsID
            title:
                type: string
                x-go-name: Title
            updated_at:
                format: date-time
                type: string
                x-go-name: UpdatedAt
            updated_by:
                type: string
                x-go-name: UpdatedBy
            userID:
                type: string
                x-go-name: UserID
            volunteer_hours:
                type: string
                x-go-name: Hours
            volunteeringActivity:
                type: string
                x-go-name: VolunteeringActivity
        title: VolunteeringDetails ...
        type: object
        x-go-package: github.com/mohit2530/communityCare/model
    WebsocketMsg:
        properties:
            activeUsersCount:
                format: int64
                type: integer
                x-go-name: ActiveUsersCount
            eventID:
                type: string
                x-go-name: EventID
            msg:
                type: string
                x-go-name: Msg
            user:
                type: string
                x-go-name: User
            userID:
                type: string
                x-go-name: UserID
        title: WebsocketMsg ...
        type: object
        x-go-package: github.com/mohit2530/communityCare/model
info:
    description: 'Scehmes: https'
    title: Documentation for the Asset alert api layer.
    version: 1.0.0
paths:
    /api/profile/{id}/inventories:
        post:
            operationId: removeSelectedInventory
            parameters:
                - description: The id of the selected user
                  in: path
                  name: id
                  required: true
                  type: string
                - description: The inventory object to add into the db
                  in: body
                  name: pruneInventoryIDMap
                  required: true
                  schema:
                    $ref: '#/definitions/Inventory'
                    description: The inventory object to add into the db
                    type: object
            responses:
                "200":
                    description: Inventory
                    schema:
                        $ref: '#/definitions/Inventory'
                "400":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "404":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "500":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
            summary: '# Remove selected inventories.'
            tags:
                - Assets
        put:
            operationId: updateSelectedInventory
            parameters:
                - description: The id of the selected user
                  in: path
                  name: id
                  required: true
                  type: string
                - description: The inventory object to add into the db
                  in: body
                  name: Inventory
                  required: true
                  schema:
                    $ref: '#/definitions/Inventory'
                    description: The inventory object to add into the db
                    type: object
            responses:
                "200":
                    description: Inventory
                    schema:
                        $ref: '#/definitions/Inventory'
                "400":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "404":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "500":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
            summary: '# Update selected inventory with details.'
            tags:
                - Assets
    /api/profile/{id}/inventories/bulk:
        post:
            operationId: addInventoryInBulk
            parameters:
                - description: The id of the selected inventory
                  in: path
                  name: id
                  required: true
                  type: string
                - description: The list of inventories to add into the db to support bulk upload
                  in: body
                  name: InventoryListRequest
                  required: true
                  schema:
                    $ref: '#/definitions/InventoryListRequest'
                    description: The list of inventories to add into the db to support bulk upload
                    type: object
            responses:
                "200":
                    description: Inventory
                    schema:
                        items:
                            $ref: '#/definitions/Inventory'
                        type: array
                "400":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "404":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "500":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
            summary: '# Bulk upload inventory list. returns the list of uploaded items.'
            tags:
                - Assets
    /api/profile/{id}/notes:
        delete:
            operationId: removeNote
            parameters:
                - description: The id of the selected note
                  in: path
                  name: id
                  required: true
                  type: string
            responses:
                "200":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "400":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "404":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "500":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
            summary: Removes the note from the db
            tags:
                - Notes
        get:
            operationId: getNotes
            parameters:
                - description: The userID of the selected user
                  in: path
                  name: id
                  required: true
                  type: string
            responses:
                "200":
                    description: Note
                    schema:
                        items:
                            $ref: '#/definitions/Note'
                        type: array
                "400":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "404":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "500":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
            summary: Retrieves the list of notes for the selected user
            tags:
                - Notes
        post:
            operationId: addNewNote
            parameters:
                - description: The id of the selected note
                  in: path
                  name: id
                  required: true
                  type: string
                - description: The note object to add into the db
                  in: body
                  name: Note
                  required: true
                  schema:
                    $ref: '#/definitions/Note'
                    description: The note object to add into the db
                    type: object
            responses:
                "200":
                    description: Note
                    schema:
                        $ref: '#/definitions/Note'
                "400":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "404":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "500":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
            summary: Add a new note to the database
            tags:
                - Notes
        put:
            operationId: updateNote
            parameters:
                - description: The id of the selected note
                  in: path
                  name: id
                  required: true
                  type: string
                - description: The note object to update into the db
                  in: body
                  name: Note
                  required: true
                  schema:
                    $ref: '#/definitions/Note'
                    description: The note object to update into the db
                    type: object
            responses:
                "200":
                    description: Note
                    schema:
                        $ref: '#/definitions/Note'
                "400":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "404":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "500":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
            summary: Updates an existing note in the database
            tags:
                - Notes
    /api/reports/{id}:
        get:
            operationId: getReports
            parameters:
                - description: The userID of the selected user
                  in: path
                  name: id
                  required: true
                  type: string
                - description: The start date for the result to begin from
                  in: query
                  name: since
                  required: true
                  type: string
                - description: The boolean flag to determine if query response should consider overdue items or not.
                  in: query
                  name: includeOverdue
                  required: true
                  type: boolean
            responses:
                "200":
                    description: Report
                    schema:
                        items:
                            $ref: '#/definitions/Report'
                        type: array
                "400":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "404":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "500":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
            summary: '# Retrieves the reports on the assets created by the selected user based on the query parameters.'
            tags:
                - Reports
    /api/v1/{id}/fetchImage:
        get:
            operationId: FetchImage
            parameters:
                - description: The id of the selected image
                  in: path
                  name: id
                  required: true
                  type: string
            responses:
                "200":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "400":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "404":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "500":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
            summary: Retrives the current image that matches the passed in ID. If the image does not exist, the application will still return a HTTP ok response to ensure that the UI will not fail due to missing image
            tags:
                - Images
    /api/v1/{id}/upload:
        post:
            operationId: UploadImage
            parameters:
                - description: The unique ID identifying the selected image object
                  in: path
                  name: id
                  required: true
                  type: string
                - description: The full file details of the selected image object
                  in: body
                  name: FileHeader
                  required: true
                  schema:
                    description: The full file details of the selected image object
                    format: byte
                    type: string
            responses:
                "200":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "400":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "404":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "500":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
            summary: Uploads an image with the selected id as filename. Used to persist user profile pictures, category or maintenance plan images
            tags:
                - Images
    /api/v1/categories:
        get:
            operationId: getAllCategories
            parameters:
                - description: The userID of the selected user
                  in: query
                  name: id
                  required: true
                  type: string
                - description: The limit of categories
                  format: int32
                  in: query
                  name: limit
                  required: true
                  type: integer
            responses:
                "200":
                    description: Category
                    schema:
                        items:
                            $ref: '#/definitions/Category'
                        type: array
                "400":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "404":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "500":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
            summary: Retrieves the list of categories that each asset can be associated with. Each user can have their own set of categories. All categories are specific to the selected user.
            tags:
                - Categories
    /api/v1/category:
        get:
            operationId: GetCategory
            parameters:
                - description: The userID of the selected user
                  in: query
                  name: id
                  required: true
                  type: string
                - description: The category id
                  in: query
                  name: catID
                  required: true
                  type: string
            responses:
                "200":
                    description: Category
                    schema:
                        $ref: '#/definitions/Category'
                "400":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "404":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "500":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
            summary: Retrieves the selected category
            tags:
                - Categories
        post:
            operationId: createCategory
            parameters:
                - description: The category object to save
                  in: body
                  name: Category
                  required: true
                  schema:
                    $ref: '#/definitions/Category'
                    description: The category object to save
                    type: object
            responses:
                "200":
                    description: Category
                    schema:
                        $ref: '#/definitions/Category'
                "400":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "404":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "500":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
            summary: Create category
            tags:
                - Categories
    /api/v1/category/{id}:
        delete:
            operationId: removeCategory
            parameters:
                - description: The id of the category to delete
                  in: path
                  name: id
                  required: true
                  type: string
            responses:
                "200":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "400":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "404":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "500":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
            summary: Removes a selected category based on the id
            tags:
                - Categories
        put:
            operationId: updateCategory
            parameters:
                - description: The id of the selected category to update for
                  in: path
                  name: id
                  required: true
                  type: string
                - description: The category object to update details for
                  in: body
                  name: Category
                  required: true
                  schema:
                    $ref: '#/definitions/Category'
                    description: The category object to update details for
                    type: object
            responses:
                "200":
                    description: Category
                    schema:
                        $ref: '#/definitions/Category'
                "400":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "404":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "500":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
            summary: Update category function updates the selected category with new values
            tags:
                - Categories
    /api/v1/category/items:
        get:
            operationId: getAllCategoryItems
            parameters:
                - description: The userID of the selected user
                  in: query
                  name: id
                  required: true
                  type: string
                - description: The limit of categories
                  format: int32
                  in: query
                  name: limit
                  required: true
                  type: integer
                - description: The category id of the selected plan
                  in: query
                  name: catID
                  required: true
                  type: string
            responses:
                "200":
                    description: CategoryItemResponse
                    schema:
                        items:
                            $ref: '#/definitions/CategoryItemResponse'
                        type: array
                "400":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "404":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "500":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
            summary: '# Retrieves the list of assets for a specific category.'
            tags:
                - Categories
        post:
            operationId: addItemsInMaintenancePlan
            parameters:
                - description: The object containing the array of assets to be removed from the association for maintenance plans
                  in: body
                  name: MaintenanceItemRequest
                  required: true
                  schema:
                    $ref: '#/definitions/MaintenanceItemRequest'
                    description: The object containing the array of assets to be removed from the association for maintenance plans
                    type: object
            responses:
                "200":
                    description: MaintenanceItemResponse
                    schema:
                        items:
                            $ref: '#/definitions/MaintenanceItemResponse'
                        type: array
                "400":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "404":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "500":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
            summary: Add selected items in a specific maintenance plan
            tags:
                - MaintenancePlans
    /api/v1/category/remove/items:
        post:
            operationId: RemoveAssociationFromCategory
            parameters:
                - description: The object containing the array of assets to update with the userID
                  in: body
                  name: CategoryItemRequest
                  required: true
                  schema:
                    $ref: '#/definitions/CategoryItemRequest'
                    description: The object containing the array of assets to update with the userID
                    type: object
            responses:
                "200":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "400":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "404":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "500":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
            summary: Removes association between the category and asset item
            tags:
                - Categories
    /api/v1/isValidEmail:
        post:
            operationId: IsValidUserEmail
            responses:
                "200":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "400":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "404":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "500":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
            summary: Returns true or false is the user is already in the system
            tags:
                - Authentication
    /api/v1/locations:
        get:
            operationId: getAllStorageLocations
            responses:
                "200":
                    description: StorageLocation
                    schema:
                        items:
                            $ref: '#/definitions/StorageLocation'
                        type: array
                "400":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "404":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "500":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
            summary: '# Retrieves the list of locations that users can use to store an asset.'
            tags:
                - StorageLocations
    /api/v1/logout:
        post:
            operationId: logout
            responses:
                "200":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "400":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "404":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "500":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
            summary: '# Logs users out of the database system.'
            tags:
                - Authentication
    /api/v1/maintenance-plans:
        get:
            description: Users can assign asset to multiple plans.
            operationId: getAllMaintenancePlans
            parameters:
                - description: The userID of the logged in user
                  in: query
                  name: id
                  required: true
                  type: string
                - description: The limit of maintenance plans
                  format: int32
                  in: query
                  name: limit
                  required: true
                  type: integer
            responses:
                "200":
                    description: MaintenancePlan
                    schema:
                        items:
                            $ref: '#/definitions/MaintenancePlan'
                        type: array
                "400":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "404":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "500":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
            summary: |-
                Retrieves the list of maintenance plans that each asset can be associated with.
                Each user can have thier own set of maintenance plans. All plans are specific to the selected user
            tags:
                - MaintenancePlans
    /api/v1/plan:
        get:
            operationId: GetMaintenancePlan
            parameters:
                - description: The userID of the selected user
                  in: query
                  name: id
                  required: true
                  type: string
                - description: The maintenance id of the selected plan
                  in: query
                  name: mID
                  required: true
                  type: string
            responses:
                "200":
                    description: MaintenancePlan
                    schema:
                        $ref: '#/definitions/MaintenancePlan'
                "400":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "404":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "500":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
            summary: Retrieve a selected maintenance plan
            tags:
                - MaintenancePlans
        post:
            operationId: createMaintenancePlan
            parameters:
                - description: The object containing details of the maintenance plan
                  in: body
                  name: MaintenancePlan
                  required: true
                  schema:
                    $ref: '#/definitions/MaintenancePlan'
                    description: The object containing details of the maintenance plan
                    type: object
            responses:
                "200":
                    description: MaintenancePlan
                    schema:
                        $ref: '#/definitions/MaintenancePlan'
                "400":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "404":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "500":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
            summary: Create maintenance plan
            tags:
                - MaintenancePlans
    /api/v1/plan/{id}:
        delete:
            operationId: removeMaintenancePlan
            parameters:
                - description: The id of the maintenance plan to delete
                  in: path
                  name: id
                  required: true
                  type: string
            responses:
                "200":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "400":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "404":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "500":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
            summary: Removes a selected maintenance plan based on the id
            tags:
                - MaintenancePlans
        put:
            operationId: UpdateMaintenancePlan
            parameters:
                - description: The id of the selected maintenance plan to update
                  in: path
                  name: id
                  required: true
                  type: string
                - description: The object containing details of the maintenance plan
                  in: body
                  name: MaintenancePlan
                  required: true
                  schema:
                    $ref: '#/definitions/MaintenancePlan'
                    description: The object containing details of the maintenance plan
                    type: object
            responses:
                "200":
                    description: MaintenancePlan
                    schema:
                        $ref: '#/definitions/MaintenancePlan'
                "400":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "404":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "500":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
            summary: Update maintenance plan function updates the selected maintenance plan with new values
            tags:
                - MaintenancePlans
    /api/v1/plan/remove/items:
        post:
            operationId: RemoveAssociationFromMaintenancePlan
            parameters:
                - description: The object containing the array of assets to be removed
                  in: body
                  name: MaintenanceItemRequest
                  required: true
                  schema:
                    $ref: '#/definitions/MaintenanceItemRequest'
                    description: The object containing the array of assets to be removed
                    type: object
            responses:
                "200":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "400":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "404":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "500":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
            summary: Removes association between the maintenance plan and asset item
            tags:
                - MaintenancePlans
    /api/v1/plans/items:
        get:
            operationId: getAllMaintenancePlanItems
            parameters:
                - description: The userID of the selected user
                  in: query
                  name: id
                  required: true
                  type: string
                - description: The limit of maintenance plans
                  format: int32
                  in: query
                  name: limit
                  required: true
                  type: integer
                - description: The maintenance id of the selected plan
                  in: query
                  name: mID
                  required: true
                  type: string
            responses:
                "200":
                    description: MaintenanceItemResponse
                    schema:
                        items:
                            $ref: '#/definitions/MaintenanceItemResponse'
                        type: array
                "400":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "404":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "500":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
            summary: '# Retrieves the list of assets for a specific maintenance plans.'
            tags:
                - MaintenancePlans
    /api/v1/profile:
        put:
            operationId: updateProfile
            parameters:
                - description: The userID of the selected user
                  in: query
                  name: id
                  required: true
                  type: string
                - description: The full profile object of the user
                  in: body
                  name: Profile
                  required: true
                  schema:
                    $ref: '#/definitions/Profile'
                    description: The full profile object of the user
                    type: object
            responses:
                "200":
                    description: Profile
                    schema:
                        $ref: '#/definitions/Profile'
                "400":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "404":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "500":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
            summary: Updates the current user profile for the selected user. Does not meddle with authentication
            tags:
                - Profiles
    /api/v1/profile/{id}:
        get:
            operationId: getUsername
            parameters:
                - description: The userID of the selected user
                  in: path
                  name: id
                  required: true
                  type: string
            responses:
                "200":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "400":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "404":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "500":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
            summary: Retrieves the user name from the profiles table. Does not meddle with authentication
            tags:
                - Profiles
    /api/v1/profile/{id}/fav:
        delete:
            operationId: removeFavItem
            parameters:
                - description: The userID of the selected user
                  in: path
                  name: id
                  required: true
                  type: string
                - description: The itemID to remove from the db
                  in: query
                  name: itemID
                  required: true
                  type: string
            responses:
                "200":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "400":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "404":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "500":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
            summary: Deletes the item that is marked as favourite by the user
            tags:
                - Profiles
        get:
            operationId: getFavouriteItems
            parameters:
                - description: The userID of the selected user
                  in: path
                  name: id
                  required: true
                  type: string
                - description: The limit of items to return. If not passed in defaults to 1000
                  format: int32
                  in: query
                  name: limit
                  type: integer
            responses:
                "200":
                    description: FavouriteItem
                    schema:
                        items:
                            $ref: '#/definitions/FavouriteItem'
                        type: array
                "400":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "404":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "500":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
            summary: '# Retrieves the items marked as favourite by the selected user.'
            tags:
                - Profiles
        post:
            operationId: saveFavItem
            parameters:
                - description: The userID of the selected user
                  in: path
                  name: id
                  required: true
                  type: string
                - description: The object that is marked favourite by the user
                  in: body
                  name: FavouriteItem
                  required: true
                  schema:
                    $ref: '#/definitions/FavouriteItem'
                    description: The object that is marked favourite by the user
                    type: object
            responses:
                "200":
                    description: FavouriteItem
                    schema:
                        items:
                            $ref: '#/definitions/FavouriteItem'
                        type: array
                "400":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "404":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "500":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
            summary: Creates a new favourite item for the selected user
            tags:
                - Profiles
    /api/v1/profile/{id}/inventories:
        get:
            operationId: getAllInventories
            parameters:
                - description: The userID of the selected user
                  in: path
                  name: id
                  required: true
                  type: string
                - description: The timestamp with time zone until the data should be retrieved for. Returns all inventories if not passed in.
                  format: date-time
                  in: query
                  name: until
                  type: string
            responses:
                "200":
                    description: Inventory
                    schema:
                        items:
                            $ref: '#/definitions/Inventory'
                        type: array
                "400":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "404":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "500":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
            summary: Retrieves the list of assets that belong to the selected user
            tags:
                - Assets
    /api/v1/profile/{id}/inventories/{assetID}:
        get:
            operationId: updateAssetColumn
            parameters:
                - description: The userID of the selected user
                  in: path
                  name: id
                  required: true
                  type: string
                - description: The asssetID of the asset details.
                  in: path
                  name: assetID
                  required: true
                  type: string
                - description: The object containing the details to update the selected asset with.
                  in: body
                  name: UpdateAssetColumn
                  required: true
                  schema:
                    $ref: '#/definitions/UpdateAssetColumn'
                    description: The object containing the details to update the selected asset with.
                    type: object
            responses:
                "200":
                    description: Inventory
                    schema:
                        $ref: '#/definitions/Inventory'
                "400":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "404":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "500":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
            summary: '# Updates the selected quantity or price column field with passed in data field. All colaborators can update selected field.'
            tags:
                - Assets
    /api/v1/profile/{id}/inventories/{invID}:
        get:
            operationId: getInventoryByID
            parameters:
                - description: The userID of the selected user
                  in: path
                  name: id
                  required: true
                  type: string
                - description: The inventoryID of the inventory details.
                  in: path
                  name: invID
                  required: true
                  type: string
            responses:
                "200":
                    description: Inventory
                    schema:
                        $ref: '#/definitions/Inventory'
                "400":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "404":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "500":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
            summary: '# Retrieves the selected inventory that matches the passed in ID created by the user.'
            tags:
                - Assets
    /api/v1/profile/{id}/stats:
        get:
            operationId: getProfileStats
            parameters:
                - description: The userID of the selected user
                  in: path
                  name: id
                  required: true
                  type: string
            responses:
                "200":
                    description: ProfileStats
                    schema:
                        $ref: '#/definitions/ProfileStats'
                "400":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "404":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "500":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
            summary: Retrieves the user stats like count of categories, plans and assets
            tags:
                - Profiles
    /api/v1/profile/list:
        get:
            operationId: getAllUserProfiles
            responses:
                "200":
                    description: Profile
                    schema:
                        items:
                            $ref: '#/definitions/Profile'
                        type: array
                "400":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "404":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "500":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
            summary: Retrieves all the user profiles listed in the database
            tags:
                - Profiles
    /api/v1/profile/recent-activities:
        get:
            operationId: getRecentActivities
            parameters:
                - description: The userID of the selected user
                  in: query
                  name: id
                  required: true
                  type: string
                - description: The limit of recent activities.
                  format: int32
                  in: query
                  name: limit
                  required: true
                  type: integer
                - description: The timestamp with time zone until the data should be retrieved for
                  format: date-time
                  in: query
                  name: until
                  type: string
            responses:
                "200":
                    description: RecentActivity
                    schema:
                        items:
                            $ref: '#/definitions/RecentActivity'
                        type: array
                "400":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "404":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "500":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
            summary: '# Retrieves user actions for categories, maintenance plans, and assets. List all created, updated, or deleted.'
            tags:
                - GetRecentActivities
    /api/v1/signin:
        post:
            operationId: signin
            parameters:
                - description: The email address of the current user
                  in: query
                  name: email
                  required: true
                  type: string
                - description: The password of the current user
                  in: query
                  name: password
                  required: true
                  type: string
            responses:
                "200":
                    description: UserCredentials
                    schema:
                        $ref: '#/definitions/UserCredentials'
                "400":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "404":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "500":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
            summary: '# Sign in users into the database system.'
            tags:
                - Authentication
    /api/v1/signup:
        post:
            operationId: signup
            parameters:
                - description: The email address of the current user
                  in: query
                  name: email
                  required: true
                  type: string
                - description: The password of the current user
                  in: query
                  name: password
                  required: true
                  type: string
                - description: The birthdate of the current user. Must be 13 years of age.
                  in: query
                  name: birthday
                  required: true
                  type: string
                - default: "false"
                  description: The user role for the application.
                  in: query
                  name: role
                  type: string
            responses:
                "200":
                    description: UserCredentials
                    schema:
                        $ref: '#/definitions/UserCredentials'
                "400":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "404":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
                "500":
                    description: MessageResponse
                    schema:
                        $ref: '#/definitions/MessageResponse'
            summary: '# Sign up users into the database system.'
            tags:
                - Authentication
produces:
    - application/json
swagger: "2.0"
