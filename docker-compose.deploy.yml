version: '3'
services:
  webserver:
    image: nginx
    container_name: 'nginx'
    build:
      context: ./frontend
      dockerfile: prod.Dockerfile
    ports:
      - '3000:3000'
    environment:
      NODE_ENV: PRODUCTION
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    restart: always
    ports:
      - ${POSTGRES_HOST}:${POSTGRES_HOST}
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      ENVIRONMENT: PRODUCTION
    volumes:
      - pg_data:/var/lib/postgresql/data
  migrate:
    image: migrate/migrate
    volumes:
      - migrations:/server/migrations
    command: ["-path", "/server/migrations", "-database",  "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${DATABASE_DOCKER_CONTAINER_IP_ADDRESS}:${DATABASE_DOCKER_CONTAINER_PORT}/${POSTGRES_DB}?sslmode=disable", "up", "3"]
    links:
      - backend
    depends_on:
      - backend
  apilayer:
    build:
      context: ./apilayer
      dockerfile: Dockerfile
    ports:
      - '8087:8087'
    environment:
      TOKEN_VALIDITY_TIME: ${TOKEN_VALIDITY_TIME} # in minutes
      CLIENT_USER: ${CLIENT_USER}
      CLIENT_PASSWORD: ${CLIENT_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}
    volumes:
      - api_layer:/usr/src/
    depends_on:
      - backend

volumes:
  pg_data:
  api_layer:
  migrations:
